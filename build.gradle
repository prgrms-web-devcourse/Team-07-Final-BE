plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.8'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'jacoco'
}

group = 'com.programmers'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

// jacoco version 설정
jacoco {
    toolVersion = "0.8.8"
}

test {
    finalizedBy 'jacocoTestReport'
}

// jacoco 보고서 설정
jacocoTestReport {
    reports {
        html.enabled true
        xml.enabled true
        csv.enabled false
    }

    afterEvaluate {
        classDirectories.setFrom(
                files(classDirectories.files.collect {
                    fileTree(dir: it, excludes: [
                            '**/*Application*',
                            '**/*Exception*',
                            '**/exception/**',
                            '**/config/**',
                            '**/mapper/**',
                            '**/dto/**'
                    ])
                })
        )
        finalizedBy 'jacocoTestCoverageVerification'
    }
}

// jacoco 만족도 설정
jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'

            limit {
                counter = "BRANCH"
                value = "COVEREDRATIO"
                minimum = 0.0
            }

            limit {
                counter = "LINE"
                value = "COVEREDRATIO"
                minimum = 0.0
            }

            excludes = [
                    '*.*Application',
                    '*.*Exception*',
                    '*.exception.*',
                    '*.config.*',
                    '*.mapper.*',
                    '*.dto.*'
            ]
        }
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'

    //OAuth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'com.auth0:java-jwt:4.2.2'
}

asciidoctor {
    dependsOn test
    inputs.dir snippetsDir
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}
