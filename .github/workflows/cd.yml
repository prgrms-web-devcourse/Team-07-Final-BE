name: CD

on:
  push:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |  
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
              ${{ runner.os }}-gradle-

      - name: Generate environment file
        run: |
          mkdir -p env
          echo "${{secrets.DOCKER_COMPOSE_ENV}}" >> env/docker-compose.env
          echo "${{secrets.DEV_SPRING_ENV}}" >> env/spring.env
          echo "${{secrets.AWS_ENV}}" >> env/aws.env
          echo "${{secrets.JWT_ENV}}" >> env/jwt.env
          echo "${{secrets.DEV_OAUTH2_ENV}}" >> env/oauth2.env
          echo "${{secrets.TEST_DB_ENV}}" >> env/test-db.env

      - name: Run docker-compose
        uses: isbang/compose-action@v1.4.1
        with:
          compose-file: "./docker/docker-compose.yml"

      - name: Get execution permission to gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Make zip file
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to AWS S3
        run: aws s3 cp --region ap-northeast-2 $GITHUB_SHA.zip s3://${{secrets.AWS_S3_BUCKET_NAME}}/$GITHUB_SHA.zip

      - name: Code Deploy
        run: |
          aws deploy create-deployment \
          --application-name ${{ secrets.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ secrets.CODE_DEPLOY_DEPLOYMENT_GROUP_DEV }} \
          --s3-location bucket=${{secrets.AWS_S3_BUCKET_NAME}},bundleType=zip,key=$GITHUB_SHA.zip
